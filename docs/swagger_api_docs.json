{
  "openapi": "3.0.4",
  "info": {
    "title": "Training Management API Exercise",
    "description": "API for managing training programs",
    "version": "v1"
  },
  "paths": {
    "/api/Participant": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "Retrieves all participants.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Participant"
        ],
        "summary": "Creates a new participant.",
        "requestBody": {
          "description": "CreateParticipantDto containing Name, Department, and TrainingProgramId.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParticipantDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParticipantDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParticipantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Participant/{id}": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "Retrieves a specific participant by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the participant.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Participant"
        ],
        "summary": "Updates an existing participant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the participant to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CreateParticipantDto with updated values.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParticipantDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParticipantDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParticipantDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Participant"
        ],
        "summary": "Deletes a participant by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the participant to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Participant/by-training/{trainingId}": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "Retrieves participants for a specific training program without training details.",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "description": "The ID of the training program.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trainer": {
      "get": {
        "tags": [
          "Trainer"
        ],
        "summary": "Retrieves all trainers.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Trainer"
        ],
        "summary": "Creates a new trainer.",
        "requestBody": {
          "description": "CreateTrainerDto containing Name, Email, and Specialization.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Trainer/{id}": {
      "get": {
        "tags": [
          "Trainer"
        ],
        "summary": "Retrieves a specific trainer by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the trainer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Trainer"
        ],
        "summary": "Updates an existing trainer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the trainer to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CreateTrainerDto with updated values.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainerDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Trainer"
        ],
        "summary": "Deletes a trainer by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the trainer to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Training": {
      "get": {
        "tags": [
          "Training"
        ],
        "summary": "Retrieves all training programs.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Training"
        ],
        "summary": "Creates a new training program.",
        "requestBody": {
          "description": "CreateTrainingDto containing Title, Description, StartDate, EndDate, TrainerId.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Training/{id}": {
      "get": {
        "tags": [
          "Training"
        ],
        "summary": "Retrieves a specific training program by ID including trainer and participants.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the training program.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Training"
        ],
        "summary": "Updates an existing training program.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the training program to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CreateTrainingDto with updated values.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Training"
        ],
        "summary": "Deletes a training program by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the training program to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateParticipantDto": {
        "required": [
          "name",
          "trainingProgramId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "trainingProgramId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateTrainerDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$",
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "specialization": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTrainingDto": {
        "required": [
          "endDate",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 5,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "trainerId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}